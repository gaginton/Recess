{"version":3,"sources":["components/layout/SignedIn.js","store/actions/authActions.js","components/layout/SignedOut.js","components/layout/Navbar.js","components/games/GameSummary.js","components/games/GameIcon.js","components/games/GameList.js","components/modals/RecessInfo.js","components/dashboard/Dashboard.js","store/actions/gameActions.js","components/games/GameDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/games/OptionalFields.js","components/games/SubmitGame.js","components/games/GameTypes.js","components/games/MandatoryFields.js","components/games/CreateGame.js","components/games/MapMarker.jsx","components/games/map.js","components/dashboard/Notifications.js","components/dashboard/ProfileHome.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/gameReducer.js","store/reducers/chatReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","withRouter","props","className","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","to","exact","activeClassName","onClick","profile","initials","SignedOut","state","firebase","links","uid","fixed","GameSummary","game","title","substring","location","moment","dateTime","toDate","calendar","authorFirstName","authorLastName","GameIcon","height","width","src","alt","GameList","games","currentDate","Date","filter","map","key","RecessInfo","modal","initialModalState","toggle","bind","this","setState","Button","color","Modal","isOpen","size","ModalHeader","ModalBody","ModalFooter","React","Component","Dashboard","compose","firestore","ordered","notifications","messages","chatroom","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","joinGame","getFirestore","newPlayer","firstName","lastName","playersPlus","players","i","length","gameId","window","pathname","split","doc","update","catch","err","leaveGame","leavingPlayer","playersMinus","splice","push","displayPlayers","e","replace","join","displayMaxTime","maxLength","displayEquipment","equipment","minPlayers","maxPlayers","content","createdAt","SignIn","email","password","handleChange","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","confirmPass","bday","phoneNo","handleDateChange","date","signUp","placeholder","phone","selected","maxDate","placeholderText","showMonthDropdown","showYearDropdown","newUser","createUserWithEmailAndPassword","resp","user","set","OptionalFields","currentStep","address","min","max","noTeams","minAge","SubmitGame","GameTypes","attributeName","label","iconClass","group","MandatoryFields","handleSelectCategory","options","category","minDate","showTimeInput","timeInputLabel","dateFormat","CreateGame","markers","isCoop","option","_next","_prev","updateLocation","createGame","history","gameError","fetch","res","json","results","result","lat","geometry","lng","console","log","previousButton","nextButton","authorID","add","authorId","MapMarker","gameCategory","Map","navigator","geolocation","getCurrentPosition","position","mapCenterLocation","coords","latitude","longitude","mapProps","center","zoom","Fragment","bootstrapURLKeys","defaultCenter","defaultZoom","gestureHandling","marker","Notifications","item","time","fromNow","ProfileHome","App","path","component","GameDetails","Boolean","hostname","initState","authReducer","action","message","gameReducer","chatReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0c82f75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedIn = props => {\r\n  // console.log({ props });\r\n  return (\r\n    <ul className=\"right furtherRight navbar\">\r\n      <li className=\"nav-item dropdown\">\r\n        <a\r\n          className=\"nav-link dropdown-toggle\"\r\n          id=\"viewsDropdown\"\r\n          role=\"button\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          View\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"viewsDropdown\"\r\n        >\r\n          <NavLink to=\"/\" exact activeClassName=\"navItem-active\">\r\n            List\r\n          </NavLink>\r\n          <NavLink to=\"/map\" exact activeClassName=\"navItem-active\">\r\n            Map\r\n          </NavLink>\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item dropdown\">\r\n        <a\r\n          className=\"nav-link dropdown-toggle\"\r\n          id=\"createDropdown\"\r\n          role=\"button\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          New\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"createDropdown\"\r\n        >\r\n          <NavLink to=\"/create\" exact activeClassName=\"navItem-active\">\r\n            Game\r\n          </NavLink>\r\n          {/* <NavLink to=\"/createLeague\" exact activeClassName=\"navItem-active\">\r\n            League\r\n          </NavLink> */}\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a onClick={props.signOut} className=\"nav-link\">\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          to=\"/profile\"\r\n          className=\"btn btn-floating pink lighten-1\"\r\n          exact\r\n          activeClassName=\"navItem-active\"\r\n        >\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n  // }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(SignedIn));\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            bday: newUser.bday,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOut = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOut","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedIn from \"./SignedIn\";\r\nimport SignedOut from \"./SignedOut\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedIn profile={profile} /> : <SignedOut />;\r\n  return (\r\n    <nav className=\"nav-wrapper black darken-3 mr-auto\" fixed=\"top\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Recess\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst GameSummary = ({ game }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 game-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <div className=\"card-title bold\">{game.title.substring(0, 32)}</div>\r\n        <div>@{game.location.substring(0, 32)}</div>\r\n        <div>Start: {moment(game.dateTime.toDate()).calendar()}</div>\r\n        <div className=\"grey-text small-text\">\r\n          Host: {game.authorFirstName} {game.authorLastName}{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSummary;\r\n","import React from \"react\";\r\nimport LazyLoad from \"react-lazy-load\";\r\n\r\nconst GameIcon = () => (\r\n  <div className=\"card z-depth-0 list-container opacity\">\r\n    <div className=\"filler\" />\r\n    <LazyLoad height={100} width={100} className=\"mar-auto\">\r\n      <img src=\"http://clipart-library.com/images/6iy5nBAMT.png\" alt=\"\" />\r\n    </LazyLoad>\r\n    {/* <LazyLoad height={50}>\r\n      <img src=\"http://apod.nasa.gov/apod/image/1502/MarsPlume_jaeschke_480.gif\" />\r\n    </LazyLoad> */}\r\n    {/* <div className=\"filler\" />\r\n    <LazyLoad height={480} offsetHorizontal={50}>\r\n      <img src=\"http://apod.nasa.gov/apod/image/1502/MarsPlume_jaeschke_480.gif\" />\r\n    </LazyLoad>\r\n    <div className=\"filler\" />\r\n    <LazyLoad\r\n      height={720}\r\n      onContentVisible={() => console.log(\"look ma I have been lazyloaded!\")}\r\n    >\r\n      <img src=\"http://apod.nasa.gov/apod/image/1502/ToadSky_Lane_1080_annotated.jpg\" />\r\n    </LazyLoad>\r\n    <div className=\"filler\" /> */}\r\n  </div>\r\n);\r\n\r\nexport default GameIcon;\r\n","import React from \"react\";\r\nimport GameSummary from \"./GameSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GameIcon from \"./GameIcon\";\r\n\r\nconst GameList = ({ games }) => {\r\n  let currentDate = new Date();\r\n  return (\r\n    <div className=\"game-list section\">\r\n      <div className=\"white-text\">Available Games</div>\r\n      {games &&\r\n        games\r\n          .filter(game => {\r\n            return currentDate <= game.dateTime.toDate();\r\n          })\r\n          .map(game => {\r\n            // console.log(game);\r\n            return (\r\n              <Link to={\"/game/\" + game.id} key={game.id}>\r\n                <div className=\"row mar-0\">\r\n                  <div className=\"col-3 opacity mar-0 padRight-0\">\r\n                    <GameIcon />\r\n                  </div>\r\n                  <div className=\"col-9 opacity mar-0 padLeft-0\">\r\n                    <GameSummary game={{ ...game, id: game.id }} />\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n      <div className=\"white-text\">Previous Games</div>\r\n      {games &&\r\n        games\r\n          .filter(game => {\r\n            return currentDate >= game.dateTime.toDate();\r\n          })\r\n          .map(game => {\r\n            return (\r\n              <Link to={\"/game/\" + game.id} key={game.id}>\r\n                <div className=\"row mar-0\">\r\n                  <div className=\"col-3 m3 mar-0 padRight-0\">\r\n                    <GameIcon />\r\n                  </div>\r\n                  <div className=\"col-9 m9 opacity mar-0 padLeft-0\">\r\n                    <GameSummary game={{ ...game, id: game.id }} />\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameList;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nexport class RecessInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: props.initialModalState\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modalContainer inlineBlock bottomLeft\">\r\n        <Button color=\"danger\" onClick={this.toggle}>\r\n          I\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n          size=\"xl\"\r\n        >\r\n          <ModalHeader toggle={this.toggle}>About Recess</ModalHeader>\r\n          <ModalBody>\r\n            <h4>Recess is...</h4>\r\n            <p>\r\n              an app to find, create and organize games. Recess' goal is to help\r\n              good people find nearby games and leagues, and ultimately find the\r\n              most suitable matches. Written by: Guy Ginton, Ori Gold, Eldad\r\n              Bercovici and Oren Spiegel.\r\n              <br />\r\n            </p>\r\n            <h4>Games vs Leagues</h4>\r\n            <p>\r\n              Recess will offer two options for creating events: Create Game or\r\n              Create League.\r\n            </p>\r\n            <p>\r\n              <b>Games</b> are one-off games. Players may join teams until the\r\n              game's start time. These games may be co-operative or competitive,\r\n              private or public. Users may duplicate and modify games.\r\n            </p>\r\n            <p>\r\n              <b>Leagues</b> are more rigid, organized sets of games. Leagues\r\n              have rounds, over the course of one or more days. Organizers set a\r\n              \"First to\" paramter -- a value of 1 is equivalent to elimination\r\n              rules, and a value of 2 means 'the first team to log 2 wins\r\n              advances to next round.' Leagues are identified by their\r\n              registration deadline, which may differ from the first game day.\r\n              Game rules can not be modified after the registeration deadline.\r\n              Recess will build tools to help with league organization, and\r\n              assigning matches.\r\n            </p>\r\n            <p>\r\n              Games are split into 6 categories: 1. Classic Recess, 2. Talent,\r\n              3. Sports, 4. Video Games, 5. Party, 6. Tabletop and more.\r\n            </p>\r\n            <h4>Scoring, Wins and Losses</h4>\r\n            <p>\r\n              Recess does not currently keep tracks of game scores, including\r\n              wins or losses. Score tracking will be an optional feature. Games\r\n              and leagues will have unique scoring mechanisms, transparent to\r\n              users. The intention is for scoring to help create appropriate\r\n              matches.\r\n              <p>\r\n                <b>\"Game Administrators\"</b> are given the option to end a game\r\n                within 24 hours of its start time. After a game is ended, either\r\n                by the admin or 24 hours elapsing, the Game Admin can enter the\r\n                final score. Each player then has 24 hours to approve or\r\n                disapprove the score. All players must approve a score for it to\r\n                be recorded.\r\n              </p>\r\n              <p>\r\n                <b>\"League Administrators\"</b> will be allowed to end matches\r\n                and rounds, and then provide a score. By registering for a\r\n                league, you are granting the League Administrators rights to\r\n                mark final scores. League Administrators can log and change\r\n                scores at any time.\r\n              </p>\r\n            </p>\r\n            <h4>King of the Chill</h4>\r\n            <p>\r\n              King of the Chill is a project to help create sustainable, local\r\n              communities. Recess is one initiative of this project.\r\n            </p>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>\r\n              Cool\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecessInfo;\r\n","import React, { Component } from \"react\";\r\n// import Chatroom from \"../chatroom/Chatroom\";\r\nimport GameList from \"../games/GameList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import Map from \"../games/map\";\r\nimport { RecessInfo } from \"../modals/RecessInfo\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { games, auth } = this.props; //REMOVED MESSAGES SINCE USING SPOT.IM\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row pad-0\">\r\n          <div className=\"col opacity\">\r\n            <GameList games={games} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"row pad-0\">\r\n          <div className=\"col s12 opacity\">\r\n            <Chatroom messages={messages} />\r\n          </div>\r\n        </div> */}\r\n        <RecessInfo initialModalState={false} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    games: state.firestore.ordered.games,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n    messages: state.firestore.ordered.chatroom\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"games\", orderBy: [\"dateTime\", \"asc\"] },\r\n    { collection: \"notifications\", limit: 20, orderBy: [\"time\", \"desc\"] }\r\n    // { collection: \"chatroom\", limit: 20, orderBy: [\"createdAt\", \"asc\"] }\r\n  ])\r\n)(Dashboard);\r\n","export const createGame = game => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // MAKE ASYNC CALL TO DATABASE\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorID = getState().firebase.auth;\r\n    let players = [`${profile.firstName} ${profile.lastName}`];\r\n    while (players.length < game.maxPlayers) {\r\n      players.push(\"\");\r\n    }\r\n    // console.log({\r\n    //   ...game,\r\n    //   category: game.category.value,\r\n    //   authorFirstName: profile.firstName,\r\n    //   authorLastName: profile.lastName,\r\n    //   authorId: authorID,\r\n    //   createdAt: new Date(),\r\n    //   players\r\n    // });\r\n\r\n    firestore\r\n      .collection(\"games\")\r\n      .add({\r\n        ...game,\r\n        category: game.category.value,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorID,\r\n        createdAt: new Date(),\r\n        players\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_GAME\", game });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_GAME_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const joinGame = game => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const newPlayer = `${profile.firstName} ${profile.lastName}`;\r\n    const playersPlus = game.players;\r\n    // console.log(\"game \", game.dateTime.toDate());\r\n    for (let i = 0; i < playersPlus.length; i++) {\r\n      if (playersPlus[i] === newPlayer) {\r\n        return;\r\n      }\r\n      if (playersPlus[i] === \"\") {\r\n        playersPlus[i] = newPlayer;\r\n        game.players = playersPlus;\r\n        break;\r\n      }\r\n    }\r\n    const gameId = window.location.pathname.split(\"/\")[\r\n      window.location.pathname.split(\"/\").length - 1\r\n    ];\r\n    firestore\r\n      .collection(\"games\")\r\n      .doc(gameId)\r\n      .update({\r\n        ...game\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"JOINED_GAME\", game });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"JOIN_GAME_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const leaveGame = game => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const leavingPlayer = `${profile.firstName} ${profile.lastName}`;\r\n    const playersMinus = game.players;\r\n    for (let i = 0; i < playersMinus.length; i++) {\r\n      if (playersMinus[i] === leavingPlayer) {\r\n        playersMinus.splice(i, 1);\r\n        playersMinus.push(\"\");\r\n        game.players = playersMinus;\r\n        break;\r\n      }\r\n    }\r\n    const gameId = window.location.pathname.split(\"/\")[\r\n      window.location.pathname.split(\"/\").length - 1\r\n    ];\r\n    firestore\r\n      .collection(\"games\")\r\n      .doc(gameId)\r\n      .update({\r\n        ...game\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"LEFT_GAME\", game });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LEFT_GAME_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { joinGame } from \"../../store/actions/gameActions\";\r\nimport { leaveGame } from \"../../store/actions/gameActions\";\r\n\r\nconst GameDetails = props => {\r\n  const { game, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (game) {\r\n    var displayPlayers = game.players ? (\r\n      <p>\r\n        Current players:{\" \"}\r\n        {game.players\r\n          .filter(function(e) {\r\n            return e.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n          })\r\n          .join(\", \")}{\" \"}\r\n      </p>\r\n    ) : null;\r\n    var displayMaxTime = game.maxLength ? (\r\n      <p>Max game length: {game.maxLength} minutes</p>\r\n    ) : null;\r\n    var displayEquipment = game.equipment ? (\r\n      <p>Players must bring: {game.equipment}</p>\r\n    ) : null;\r\n    var minPlayers = game.minPlayers ? game.minPlayers : 1;\r\n    var maxPlayers = game.maxPlayers ? game.maxPlayers : 20;\r\n    return (\r\n      <div className=\"container section\">\r\n        <div className=\"game-details card z-depth-0 opacity\">\r\n          <div className=\"card-cont ent\">\r\n            <div className=\"card-title bold\">{game.title}</div>\r\n            <div className=\"card-title\">\r\n              {game.location} || {moment(game.dateTime.toDate()).calendar()}\r\n              {/* {moment(game.dateTime).format(\"MMMM Do YYYY, h:mm:ss a\")} */}\r\n            </div>\r\n            <p>{game.content}</p>\r\n            <p>\r\n              Total # of Players: {minPlayers} - {maxPlayers}{\" \"}\r\n            </p>\r\n            {displayPlayers} {displayMaxTime} {displayEquipment}\r\n          </div>\r\n          <div className=\"gameActionButtonContainer\">\r\n            <span className=\"input-field\">\r\n              <button\r\n                className=\"btn blue z-depth-0\"\r\n                onClick={() => props.joinGame(game)}\r\n              >\r\n                JOIN\r\n              </button>\r\n            </span>\r\n            <span className=\"input-field leaveGameButton\">\r\n              <button\r\n                className=\"btn blue z-depth-0\"\r\n                onClick={() => props.leaveGame(game)}\r\n              >\r\n                LEAVE\r\n              </button>\r\n            </span>\r\n          </div>\r\n          <div className=\"spotim container\">\r\n            <div className=\"bold\">Discuss this Game</div>\r\n            {/* REMOVED SPOT.IM  */}\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by: {game.authorFirstName} {game.authorLastName}\r\n            </div>\r\n            <div>{moment(game.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Game...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const games = state.firestore.data.games;\r\n  const game = games ? games[id] : null;\r\n  return {\r\n    game: game,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    joinGame: game => dispatch(joinGame(game)),\r\n    leaveGame: game => dispatch(leaveGame(game))\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: \"games\" }])\r\n)(GameDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container opacity\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\n\r\nexport class SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPass: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    bday: \"\",\r\n    phoneNo: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      bday: date\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.email !== \"\" &&\r\n      this.state.password !== \"\" &&\r\n      this.state.firstName !== \"\" &&\r\n      this.state.lastName !== \"\" &&\r\n      this.state.bday !== \"\" &&\r\n      this.state.password === this.state.confirmPass\r\n    ) {\r\n      this.props.signUp(this.state);\r\n    }\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"small-text\">\r\n            During the current testing period, there is no authentication of\r\n            values.\r\n            <br />\r\n            You must remember email and password to log back in.\r\n            <br />\r\n            If you would like to receive notifications, use your real email and\r\n            phone number.\r\n          </div>\r\n          {/* START WITH NAME TO BE POLITE */}\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"firstName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* EMAIL AND PASS */}\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <PhoneInput\r\n                  placeholder=\"Enter phone number\"\r\n                  value={this.state.phone}\r\n                  onChange={phone => this.setState({ phone })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"confirmPass\">Confirm Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"confirmPass\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <div className=\"input-field\">\r\n                <DatePicker\r\n                  // id=\"bday\"\r\n                  selected={this.state.bday}\r\n                  onChange={this.handleDateChange}\r\n                  maxDate={new Date()}\r\n                  placeholderText=\"Birthday\"\r\n                  showMonthDropdown\r\n                  showYearDropdown\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class OptionalFields extends Component {\r\n  render() {\r\n    if (this.props.currentStep !== 2) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <h4 className=\"bold\">Optional Fields</h4>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"address\">\r\n            Address (Game location or league registeration location)\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            onChange={this.props.handleChange}\r\n            value={this.props.address}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            {/* ---------------- TEAM SIZE, NUMBER OF TEAMS ----------------------- */}\r\n            <div className=\"grey-text text-darken-3\">\r\n              Team and Roster Layout\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"minPlayers\">Minimum Players</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"minPlayers\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.minPlayers}\r\n                min=\"2\"\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"maxPlayers\">Maximum Players</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"maxPlayers\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.maxPlayers}\r\n                min=\"2\"\r\n                max=\"50\"\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"noTeams\">Number of Teams</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"noTeams\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.noTeams}\r\n                max={this.props.maxPlayers}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m6\">\r\n            {/* ---------------- ADDITIONAL FIELDS: Max game length, bring with, min age ----------------------- */}\r\n            <div className=\"grey-text text-darken-3\">\r\n              Additional Fields <br />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"maxLength\">\r\n                Maximum Length of Game (Minutes)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"maxLength\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.maxLength}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"minAge\">Minimum Age of Players</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"minAge\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.minAge}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"equipment\">\r\n                Please bring to game (Equipment, fees, etc.)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"equipment\"\r\n                onChange={this.props.handleChange}\r\n                value={this.props.equipment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionalFields;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class SubmitGame extends Component {\r\n  render() {\r\n    if (this.props.currentStep !== 3) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <h4 className=\"bold\">Read Terms and Create Game</h4>\r\n        <div className=\"grey-text text-darken-3\">\r\n          * Please note, by clicking \"Create Game\" you are creating a PUBLIC\r\n          game, visible to all Recess users. These games can not be modified in\r\n          the current Recess version. Private games and editing, up until the\r\n          day of a game, are features expected soon.\r\n        </div>\r\n        <div className=\"grey-text text-darken-3\">\r\n          * Your information is confidential. However, Recess is not responsible\r\n          for what you write online. We recommend you do not give personal\r\n          information to strangers.\r\n        </div>\r\n        <div className=\"grey-text text-darken-3\">\r\n          * Please do not use this app if you are under 18 years of age.\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button\r\n            className=\"btn pink lighten-1 z-depth-0\"\r\n            onSubmit={this.props.handleSubmit}\r\n          >\r\n            Create Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitGame;\r\n","const GameTypes = [\r\n  {\r\n    value: 1,\r\n    attributeName: \"Recess\",\r\n    label: \"Classic Recess Games\",\r\n    iconClass: \"rss-cone\",\r\n    group: \"Recess\"\r\n  },\r\n  {\r\n    value: 2,\r\n    attributeName: \"Talent\",\r\n    label: \"Talent Games\",\r\n    iconClass: \"rss-cap\",\r\n    group: \"Talent\"\r\n  },\r\n  {\r\n    value: 3,\r\n    attributeName: \"Sport\",\r\n    label: \"Sports Games\",\r\n    iconClass: \"rss-soccer\",\r\n    group: \"Sport\"\r\n  },\r\n  {\r\n    value: 4,\r\n    attributeName: \"Digital\",\r\n    label: \"Video Games\",\r\n    iconClass: \"rss-remote\",\r\n    group: \"Digital\"\r\n  },\r\n  {\r\n    value: 5,\r\n    attributeName: \"Party\",\r\n    label: \"Party Games\",\r\n    iconClass: \"rss-cup\",\r\n    group: \"Party\"\r\n  },\r\n  {\r\n    value: 6,\r\n    attributeName: \"Tabletop\",\r\n    label: \"Tabletop Games\",\r\n    iconClass: \"rss-board\",\r\n    group: \"Tabletop\"\r\n  }\r\n];\r\n\r\nexport default GameTypes;\r\n","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from \"react-select\";\r\nimport GameTypes from \"./GameTypes\";\r\n\r\nexport class MandatoryFields extends Component {\r\n  render() {\r\n    if (this.props.currentStep !== 1) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <h4 className=\"bold\">Mandatory Fields</h4>\r\n        <div className=\"input-field\">\r\n          <Select\r\n            onChange={this.props.handleSelectCategory}\r\n            options={GameTypes}\r\n            value={this.props.category}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">\r\n            * Game Title (Ex: Football, Tag, DnD, Beer Pong)\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            onChange={this.props.handleChange}\r\n            value={this.props.title}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">\r\n            * Game Description (Ex: Full court, Shirts vs Skins, Beginners\r\n            Welcome, 10 cup)\r\n          </label>\r\n          <textarea\r\n            className=\"materialize-textarea\"\r\n            id=\"content\"\r\n            onChange={this.props.handleChange}\r\n            value={this.props.content}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"location\">\r\n            * Location (Ex: Central Park, XBox Live, Mobile)\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"location\"\r\n            onChange={this.props.handleChange}\r\n            value={this.props.location}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <DatePicker\r\n            // id=\"gameDateTimeSelector\"\r\n            selected={\r\n              this.props.dateTime ? new Date(this.props.dateTime) : null\r\n            }\r\n            onChange={this.props.handleDateChange}\r\n            minDate={new Date()}\r\n            placeholderText=\"* Start Date and Time\"\r\n            showTimeInput\r\n            // showMonthDropdown\r\n            timeInputLabel=\"Time:\"\r\n            dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MandatoryFields;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createGame } from \"../../store/actions/gameActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import GameTypes from \"./GameTypes\";\r\nimport OptionalFields from \"./OptionalFields\";\r\nimport SubmitGame from \"./SubmitGame\";\r\nimport MandatoryFields from \"./MandatoryFields\";\r\n\r\nconst MAPS_API_KEY = \"AIzaSyAM6_5p4WOHokKXAJ_U2bVmbBDpUqdm7-U\";\r\n\r\nexport class CreateGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._next = this._next.bind(this);\r\n    this._prev = this._prev.bind(this);\r\n    this.updateLocation = this.updateLocation.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  // componentDidUpdate() {\r\n  //   console.log(\"component did update\", this.state);\r\n  //   // this.props.createGame(this.state);\r\n  // }\r\n  _next() {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  }\r\n  _prev() {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  }\r\n  get previousButton() {\r\n    let currentStep = this.state.currentStep;\r\n    if (currentStep !== 1) {\r\n      return (\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          type=\"button\"\r\n          onClick={this._prev}\r\n        >\r\n          Previous\r\n        </button>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  get nextButton() {\r\n    let currentStep = this.state.currentStep;\r\n    if (currentStep < 3) {\r\n      return (\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          type=\"button\"\r\n          onClick={this._next}\r\n        >\r\n          Next\r\n        </button>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  state = {\r\n    currentStep: 1,\r\n    // MANDATORY\r\n    title: \"\",\r\n    content: \"\",\r\n    location: \"\",\r\n    dateTime: \"\",\r\n    category: \"\",\r\n    // OPTIONAL\r\n    address: \"\",\r\n    markers: \"\",\r\n    minPlayers: \"\",\r\n    maxPlayers: \"\",\r\n    noTeams: \"\",\r\n    maxLength: \"\",\r\n    minAge: \"\",\r\n    equipment: \"\",\r\n    // OTHER\r\n    players: [],\r\n    isCoop: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      dateTime: date\r\n    });\r\n  };\r\n  handleSelectCategory = option => {\r\n    this.setState({\r\n      category: option\r\n    });\r\n  };\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.title !== \"\" &&\r\n      this.state.content !== \"\" &&\r\n      this.state.location !== \"\" &&\r\n      this.state.dateTime !== \"\" &&\r\n      this.state.category !== \"\"\r\n    ) {\r\n      if (this.state.address !== \"\") {\r\n        await this.updateLocation(this.state.address);\r\n        // GIVE ERROR MESSAGE IF ADDRESS DOES NOT GIVE COORD\r\n      }\r\n      this.props.createGame(this.state);\r\n      this.props.history.push(\"/\");\r\n      // FIX VALIDATION TO INCLUDE MORE ERROR MESSAGES\r\n    } else return (this.gameError = \"Mandatory fields are missing!\");\r\n  }\r\n  async updateLocation(address) {\r\n    await fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${address}+123&key=${MAPS_API_KEY}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({\r\n          markers: res.results.map(result => ({\r\n            lat: result.geometry.location.lat,\r\n            lng: result.geometry.location.lng\r\n          }))\r\n        });\r\n      })\r\n      .catch(console.log);\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    let gameError = null;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h4 className=\"bold\">Create Game</h4>\r\n          <MandatoryFields\r\n            currentStep={this.state.currentStep}\r\n            handleChange={this.handleChange}\r\n            handleSelectCategory={this.handleSelectCategory}\r\n            handleDateChange={this.handleDateChange}\r\n            title={this.state.title}\r\n            content={this.state.content}\r\n            location={this.state.location}\r\n            dateTime={this.state.dateTime}\r\n            category={this.state.category}\r\n          />\r\n          <OptionalFields\r\n            currentStep={this.state.currentStep}\r\n            handleChange={this.handleChange}\r\n            address={this.state.address}\r\n            minPlayers={this.state.minPlayers}\r\n            maxPlayers={this.state.maxPlayers}\r\n            noTeams={this.state.noTeams}\r\n            maxLength={this.state.maxLength}\r\n            minAge={this.state.minAge}\r\n            equipment={this.state.equipment}\r\n          />\r\n          <SubmitGame\r\n            currentStep={this.state.currentStep}\r\n            handleSubmit={this.handleSubmit}\r\n          />\r\n          <div className=\"red-text center\">\r\n            {{ gameError } ? <p>{gameError}</p> : null}\r\n          </div>\r\n          {this.previousButton}\r\n          {this.nextButton}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createGame: game => dispatch(createGame(game))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGame);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MapMarker.css\";\r\nimport moment from \"moment\";\r\n\r\nconst MapMarker = ({\r\n  lat,\r\n  lng,\r\n  title,\r\n  content,\r\n  gameId,\r\n  gameCategory,\r\n  dateTime\r\n}) => (\r\n  <Link to={\"/game/\" + gameId} key={gameId}>\r\n    <div className={`mapMarker category-${gameCategory}`} lat={lat} lng={lng} />\r\n    <p className=\"mapMarker-hoverBox\">\r\n      {title} <br />\r\n      {moment(dateTime.toDate()).calendar()}\r\n    </p>\r\n  </Link>\r\n);\r\n\r\nexport default MapMarker;\r\n","import React, { Component } from \"react\";\r\n// import GameList from \"../games/GameList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport { RecessInfo } from \"../modals/RecessInfo\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport MapMarker from \"./MapMarker\";\r\n\r\nconst MAPS_API_KEY = \"AIzaSyAM6_5p4WOHokKXAJ_U2bVmbBDpUqdm7-U\";\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({\r\n        mapCenterLocation: {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const mapProps = {\r\n      center: this.state.mapCenterLocation,\r\n      zoom: 14\r\n    };\r\n    const { games } = this.props;\r\n    // if (!auth.uid) return <Redirect to=\"/signin\" />; MAY REMOVE SO PEOPLE CAN SEE MAP\r\n    return (\r\n      <React.Fragment>\r\n        {mapProps.center && (\r\n          <div className=\"mapContainer\">\r\n            <GoogleMapReact\r\n              bootstrapURLKeys={{\r\n                key: MAPS_API_KEY\r\n              }}\r\n              defaultCenter={mapProps.center}\r\n              defaultZoom={mapProps.zoom}\r\n              options={{ gestureHandling: \"greedy\" }}\r\n            >\r\n              {games &&\r\n                games.map(game =>\r\n                  game.markers.map(marker => (\r\n                    <MapMarker\r\n                      lat={marker.lat}\r\n                      lng={marker.lng}\r\n                      title={game.title}\r\n                      gameId={game.id}\r\n                      gameCategory={game.category}\r\n                      dateTime={game.dateTime}\r\n                    />\r\n                  ))\r\n                )}\r\n            </GoogleMapReact>\r\n          </div>\r\n        )}\r\n        {/* <GameList games={games} */}\r\n        <RecessInfo initialModalState={false} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    games: state.firestore.ordered.games\r\n    // auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"games\", orderBy: [\"dateTime\", \"asc\"] }])\r\n)(Map);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nexport class Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: props.initialModalState\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modalContainer inlineBlock\">\r\n        <Button color=\"danger\" onClick={this.toggle}>\r\n          Notifications\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n          size=\"xl\"\r\n        >\r\n          <ModalHeader toggle={this.toggle}>Notifications</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"section\">\r\n              <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                  <ul className=\"notifications\">\r\n                    {this.props.notifications &&\r\n                      this.props.notifications.map(item => {\r\n                        return (\r\n                          <li key={item.id}>\r\n                            <span className=\"pink-text\">{item.user} </span>\r\n                            <span className=\"grey-text text-darken-3\">\r\n                              {item.content}\r\n                            </span>\r\n                            <div className=\"grey-text small-text note-date\">\r\n                              {moment(item.time.toDate()).fromNow()}\r\n                            </div>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>\r\n              Cool\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Notifications = props => {\r\n//   const { notifications } = props;\r\n//   return (\r\n//     <div className=\"section\">\r\n//       <div className=\"card z-depth-0\">\r\n//         <div className=\"card-content\">\r\n//           <span className=\"card-title text-darken-3 bold\">Notifications</span>\r\n//           <ul className=\"notifications\">\r\n//             {notifications &&\r\n//               notifications.map(item => {\r\n//                 return (\r\n//                   <li key={item.id}>\r\n//                     <span className=\"pink-text\">{item.user} </span>\r\n//                     <span className=\"grey-text text-darken-3\">\r\n//                       {item.content}\r\n//                     </span>\r\n//                     <div className=\"grey-text small-text note-date\">\r\n//                       {moment(item.time.toDate()).fromNow()}\r\n//                     </div>\r\n//                   </li>\r\n//                 );\r\n//               })}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { RecessInfo } from \"../modals/RecessInfo\";\r\nimport Notifications from \"../dashboard/Notifications\";\r\n\r\nclass ProfileHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"mapContainer padLeft-20\">\r\n          <h1 className=\"text-white\">Coming Soon...</h1>\r\n          <p className=\"text-white\">\r\n            In Q1 Recess will add: Customize your layout and settings, game tags\r\n            (FPS, free for all, Xbox etc.) Game Scoring, Notifications, Private\r\n            Game, User Profiles and much more!\r\n            <br />\r\n            Write to me at guyginton@gmail.com for feedback, suggestions and\r\n            anything else.\r\n          </p>\r\n          <Notifications\r\n            notifications={notifications}\r\n            initialModalState={false}\r\n          />\r\n\r\n          <RecessInfo initialModalState={false} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n    games: state.firestore.ordered.games,\r\n    messages: state.firestore.ordered.chatroom\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    // { collection: \"games\", orderBy: [\"dateTime\", \"asc\"] },\r\n    { collection: \"notifications\", limit: 20, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(ProfileHome);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport GameDetails from \"./components/games/GameDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateGame from \"./components/games/CreateGame\";\nimport Map from \"./components/games/map\";\n// import CreateLeague from \"./components/games/CreateLeague\";\nimport ProfileHome from \"./components/dashboard/ProfileHome\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/game/:id\" component={GameDetails} />\n            <Route exact path=\"/map\" component={Map} />\n            <Route path=\"/create\" component={CreateGame} />\n            {/* <Route path=\"/createLeague\" component={CreateLeague} /> */}\n            <Route path=\"/profile\" component={ProfileHome} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  games: [\r\n    { id: \"1\", title: \"Basketball\", content: \"shirts vs skins\" },\r\n    { id: \"2\", title: \"Football\", content: \"6 vs 6\" },\r\n    { id: \"3\", title: \"Tag\", content: \"League rules\" },\r\n    { id: \"4\", title: \"Beer Pong\", content: \"21 Must have ID\" },\r\n    { id: \"5\", title: \"Hide n Seek\", content: \"One vs All\" }\r\n  ]\r\n};\r\n\r\nconst gameReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_GAME\":\r\n      // console.log(\"created game\", action.game);\r\n      return state;\r\n    case \"CREATE_GAME_ERROR\":\r\n      // console.log(\"create game error\", action.err);\r\n      return state;\r\n    case \"JOINED_GAME\":\r\n      // console.log(\"joined game\", action.game);\r\n      return state;\r\n    case \"JOIN_GAME_ERROR\":\r\n      // console.log(\"join game error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","const initState = {\r\n  chatroom: [{ id: \"1\", message: \"Hello World!\" }]\r\n};\r\n\r\nconst chatReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_MESSAGE\":\r\n      // console.log(\"created message\", action.message);\r\n      return state;\r\n    case \"CREATE_MESSAGE_ERROR\":\r\n      // console.log(\"create message error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chatReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport gameReducer from \"./gameReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  game: gameReducer,\r\n  message: chatReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyDwYcwvbMrmw1QLwjdjku0PMzUxECiCHQ0\",\r\n  authDomain: \"recess-8a9b6.firebaseapp.com\",\r\n  databaseURL: \"https://recess-8a9b6.firebaseio.com\",\r\n  projectId: \"recess-8a9b6\",\r\n  storageBucket: \"recess-8a9b6.appspot.com\",\r\n  messagingSenderId: \"636940712309\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n// const database = firebase.database();\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import registerServiceWorker from './registerServiceWorker'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\r\n    )\r\n);\r\n\r\n// WAIT TILL FIREBASE IS READY, THEN RENDER DOM\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    // registerServiceWorker();\r\n    serviceWorker.unregister();\r\n});\r\n\r\n\r\n"],"sourceRoot":""}